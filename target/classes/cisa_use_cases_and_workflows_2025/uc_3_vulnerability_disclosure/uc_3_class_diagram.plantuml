@startuml
	title Class Diagram: Vulnerability Disclosure Workflow
	
	' Core Process Entities
	class "VulnerabilityReport" {
	  +reportId: String
	  +source: String
	  +dateReported: Date
	  +description: Text
	  +intakeMethod: Enum { VINCE, Web, HelpDesk }
	}
	
	class "ServiceNowTicket" {
	  +ticketId: String
	  +status: Enum { New, InProgress, Assigned, Closed }
	  +createdBy: String
	  +assignedTo: String
	  +linkedReport: String
	}
	
	class "Analyst" {
	  +analystId: String
	  +name: String
	  +tier: Enum { Tier1, Tier2, Tier3 }
	  +specialization: List<String>
	}
	
	class "AnalyticWorkspace" {
	  +workspaceId: String
	  +awsResourceLink: URL
	  +purpose: String
	  +accessControl: List<String>
	}
	
	class "DetectionAnalytic" {
	  +analyticId: String
	  +createdBy: String
	  +notebookReference: URL
	  +deployedTo: Enum { Databricks, Elastic }
	}
	
	class "AnalysisArtifact" {
	  +artifactId: String
	  +ticketId: String
	  +description: String
	  +storageLocation: URL
	  +author: String
	}
	
	class "AnalyticKnowledgeBase" {
	  +artifactIndex: List<String>
	  +frontend: Enum { ServiceNow, SharePoint }
	  +backend: Enum { AWS_S3 }
	}
	
	class "ProductionStaff" {
	  +staffId: String
	  +name: String
	  +roles: List<String>
	}
	
	class "DisclosureProduct" {
	  +productId: String
	  +generatedFromTicket: String
	  +gitRepoLink: URL
	  +collateralLinks: List<URL>
	  +status: Enum { Draft, Finalized, Released }
	}
	
	' Relationships
	VulnerabilityReport --> ServiceNowTicket : triggers >>
	ServiceNowTicket --> Analyst : assignedTo >>
	Analyst --> AnalyticWorkspace : requests/accesses >>
	Analyst --> AnalysisArtifact : creates >>
	AnalysisArtifact --> AnalyticKnowledgeBase : archived in >>
	
	Analyst --> DetectionAnalytic : develops >>
	DetectionAnalytic --> Elastic : deployed in >>
	DetectionAnalytic --> ServiceNowTicket : linked back to >>
	
	ServiceNowTicket --> ProductionStaff : handed off >>
	ProductionStaff --> DisclosureProduct : generates >>
	DisclosureProduct --> ServiceNowTicket : sourced from >>

@enduml
